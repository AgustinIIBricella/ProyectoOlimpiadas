// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoOlimpiadas.Data;

#nullable disable

namespace ProyectoOlimpiadas.Data.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20230929001532_prueba0")]
    partial class prueba0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AreasEnfermero", b =>
                {
                    b.Property<int>("Areaid")
                        .HasColumnType("int");

                    b.Property<int>("Enfermerosid")
                        .HasColumnType("int");

                    b.HasKey("Areaid", "Enfermerosid");

                    b.HasIndex("Enfermerosid");

                    b.ToTable("AreasEnfermero");
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Areas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("id");

                    b.ToTable("Areas", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.DatosMedicos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("alergias")
                        .HasColumnType("bit");

                    b.Property<string>("alergias_descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("grupo_sanguineo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("medicamentos")
                        .HasColumnType("bit");

                    b.Property<string>("medicamentos_descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("vacunas")
                        .HasColumnType("bit");

                    b.Property<string>("vacunas_descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("DatosMedicos", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Enfermero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_de_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("nombre_completo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("telefonoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("telefonoid");

                    b.ToTable("Enfermero", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Llamadas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("fecha_y_hora")
                        .HasColumnType("datetime2");

                    b.Property<bool>("gravedad")
                        .HasColumnType("bit");

                    b.Property<bool>("origen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("tiempo_de_atencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("tiempo_de_llamada")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Llamadas", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.ObraSocial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("numerodeafiliado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("id");

                    b.ToTable("ObraSocial", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Paciente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("DatosMedicosId")
                        .HasColumnType("int");

                    b.Property<int>("ObraSocialId")
                        .HasColumnType("int");

                    b.Property<int>("TelefonoId")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("fecha_de_naciemiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("nombre_completo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DatosMedicosId");

                    b.HasIndex("ObraSocialId");

                    b.HasIndex("TelefonoId");

                    b.ToTable("Paciente", (string)null);
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Telefono", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("celular")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("fijo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("otro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("Telefono", (string)null);
                });

            modelBuilder.Entity("AreasEnfermero", b =>
                {
                    b.HasOne("ProyectoOlimpiadas.Data.Models.Areas", null)
                        .WithMany()
                        .HasForeignKey("Areaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoOlimpiadas.Data.Models.Enfermero", null)
                        .WithMany()
                        .HasForeignKey("Enfermerosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Enfermero", b =>
                {
                    b.HasOne("ProyectoOlimpiadas.Data.Models.Telefono", "telefono")
                        .WithMany()
                        .HasForeignKey("telefonoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("telefono");
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Paciente", b =>
                {
                    b.HasOne("ProyectoOlimpiadas.Data.Models.Areas", "Area")
                        .WithMany("Pacientes")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoOlimpiadas.Data.Models.DatosMedicos", "DatosMedicos")
                        .WithMany()
                        .HasForeignKey("DatosMedicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoOlimpiadas.Data.Models.ObraSocial", "ObraSocial")
                        .WithMany()
                        .HasForeignKey("ObraSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoOlimpiadas.Data.Models.Telefono", "Telefono")
                        .WithMany()
                        .HasForeignKey("TelefonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("DatosMedicos");

                    b.Navigation("ObraSocial");

                    b.Navigation("Telefono");
                });

            modelBuilder.Entity("ProyectoOlimpiadas.Data.Models.Areas", b =>
                {
                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
